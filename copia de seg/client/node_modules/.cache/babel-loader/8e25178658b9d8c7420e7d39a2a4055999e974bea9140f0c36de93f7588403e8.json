{"ast":null,"code":"import { GET_VIDEOGAME } from '../actions/index';\nconst initialState = {\n  allVideogames: [],\n  videogames: [],\n  genres: [],\n  platforms: [],\n  detail: []\n};\nfunction rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'GET_VIDEOGAMES':\n      let platforms = [];\n      action.payload.map(e => platforms = [...platforms, ...e.platforms]);\n      return {\n        ...state,\n        allVideogames: action.payload,\n        videogames: action.payload,\n        platforms: Array.from(new Set(platforms))\n      };\n    case 'GET_NAME_VIDEOGAMES':\n      return {\n        ...state,\n        videogames: action.payload\n      };\n    case 'GET_GENRES':\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case 'FILTER_BY_GENRES':\n      const allGenres2 = state.allVideogames;\n      //const aux = [];\n      //aux = for (var name in allGenres2.genres){\n      //   console.log(name);\n      //}}\n\n      //console.log(allGenres2)\n\n      const genresFiltered = action.payload === \"all\" ? allGenres2 : allGenres2.filter(el => {\n        let aux = \"\";\n        for (let i = 0; el.genres.length > i; i++) {\n          aux += el.genres[i].name;\n        }\n        console.log(aux);\n        return aux.includes(action.payload);\n      });\n      return {\n        ...state,\n        videogames: genresFiltered\n      };\n    case 'FILTER_CREATED':\n      const allStateVideogames = state.allVideogames;\n      const createdGame = action.payload === 'createdInDb' ? allStateVideogames.filter(e => e.createdInDb) : allStateVideogames.filter(e => !e.createdInDb);\n      return {\n        ...state,\n        //allVideogames:action.payload === \"All\" ? state.videogames: createdGame,\n        videogames: action.payload === \"All\" ? state.allVideogames : createdGame\n      };\n    case 'ORDER_BY_RATING':\n      const array = action.payload === 'best' ? state.videogames.sort((a, b) => b.rating - a.rating) : state.videogames.sort((a, b) => a.rating - b.rating);\n      return {\n        ...state,\n        videogames: array\n      };\n    case 'ORDER_BY_NAME':\n      const sortedArr = action.payload === 'asc' ? state.videogames.sort(function (a, b) {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (b.name > a.name) {\n          return -1;\n        }\n        return 0;\n      }) : state.videogames.sort(function (a, b) {\n        if (a.name > b.name) {\n          return -1;\n        }\n        if (b.name > a.name) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        allVideogames: sortedArr\n      };\n    case 'POST_VIDEOGAME':\n      return {\n        ...state\n      };\n    case 'GET_DETAIL':\n      return {\n        ...state,\n        detail: action.payload\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["GET_VIDEOGAME","initialState","allVideogames","videogames","genres","platforms","detail","rootReducer","state","action","type","payload","map","e","Array","from","Set","allGenres2","genresFiltered","filter","el","aux","i","length","name","console","log","includes","allStateVideogames","createdGame","createdInDb","array","sort","a","b","rating","sortedArr"],"sources":["C:/Users/Upro/Documents/GitHub/PI-Videogames-main/copia de seg/client/src/reducer/index.js"],"sourcesContent":["import {GET_VIDEOGAME} from '../actions/index';\r\n\r\nconst initialState = {\r\n    allVideogames:[],\r\n    videogames: [],\r\n    genres:[],\r\n    platforms:[],\r\n    detail:[]\r\n}\r\n\r\nfunction rootReducer(state = initialState,action){\r\nswitch(action.type) {\r\n    case 'GET_VIDEOGAMES':\r\n        let platforms=[];\r\n        action.payload.map((e)=>(platforms = [...platforms,...e.platforms]))\r\n        return{\r\n            ...state,\r\n            allVideogames:action.payload,\r\n            videogames: action.payload,\r\n            platforms: Array.from(new Set(platforms)),\r\n            \r\n        };\r\n\r\n    case 'GET_NAME_VIDEOGAMES':\r\n        return {\r\n            ...state,\r\n            videogames: action.payload\r\n        }\r\n\r\n    case 'GET_GENRES':\r\n        return{\r\n            ...state,\r\n            genres: action.payload\r\n        }\r\n\r\n    case 'FILTER_BY_GENRES':\r\n        const allGenres2 = state.allVideogames;\r\n         //const aux = [];\r\n         //aux = for (var name in allGenres2.genres){\r\n         //   console.log(name);\r\n         //}}\r\n        \r\n        //console.log(allGenres2)\r\n        \r\n        const genresFiltered = action.payload === \"all\" ? allGenres2 \r\n        : allGenres2.filter(el =>\r\n        { let aux = \"\";\r\n            for(let i =0; el.genres.length>i ; i++ ){\r\n                aux += el.genres[i].name\r\n            }\r\n            console.log(aux);\r\n            return aux.includes(action.payload)\r\n        });\r\n\r\n      return {\r\n        ...state,\r\n        videogames: genresFiltered,\r\n      };\r\n\r\n    case 'FILTER_CREATED':\r\n        const allStateVideogames = state.allVideogames\r\n        const createdGame = action.payload === 'createdInDb' ?\r\n         allStateVideogames.filter( e => e.createdInDb) :\r\n         allStateVideogames.filter( e => !e.createdInDb)\r\n        return{\r\n            ...state,\r\n            //allVideogames:action.payload === \"All\" ? state.videogames: createdGame,\r\n            videogames: action.payload === \"All\" ? state.allVideogames : createdGame\r\n        };\r\n\r\n    case 'ORDER_BY_RATING':    \r\n    const array = action.payload === 'best' \r\n    ? state.videogames.sort((a,b) =>b.rating-a.rating)\r\n    : state.videogames.sort((a,b) =>a.rating-b.rating);\r\n    return{\r\n     ...state,\r\n     videogames: array\r\n    };\r\n\r\n\r\n    case 'ORDER_BY_NAME':\r\n        const sortedArr = action.payload === 'asc' ?\r\n        state.videogames.sort(function(a,b) {\r\n        if(a.name > b.name) {\r\n            return 1;\r\n         }\r\n        if(b.name > a.name) {\r\n            return -1;\r\n        } \r\n        return 0;\r\n    }) :\r\n    state.videogames.sort(function (a,b){\r\n        if(a.name > b.name) {\r\n            return -1;\r\n        }\r\n        if(b.name > a.name) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    })\r\n     return {\r\n        ...state,\r\n        allVideogames:sortedArr\r\n     }\r\n    \r\n    case 'POST_VIDEOGAME':\r\n        return{\r\n        ...state,\r\n        }\r\n        \r\n    case 'GET_DETAIL':\r\n        return{\r\n            ...state,\r\n            detail: action.payload\r\n        }\r\n\r\n     default:\r\n            return state;\r\n}\r\n    \r\n    \r\n}\r\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}